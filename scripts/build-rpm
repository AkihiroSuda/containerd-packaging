#!/usr/bin/env bash

source /.rpm-helpers

SPEC_FILE=SPECS/containerd.spec

set -e

# copied from get.docker.com
get_distribution() {
    lsb_dist=""
    # Every system that we officially support has /etc/os-release
    if [ -r /etc/os-release ]; then
        lsb_dist="$(. /etc/os-release && echo "$ID")"
    fi
    # Returning an empty string here should be alright since the
    # case statements don't act unless you provide an actual value
    echo "$lsb_dist"
}

VERSION="$(git --git-dir "${GO_SRC_PATH}/.git" describe --tags | sed 's/^v//')"
RPM_VER_BITS=$(gen-rpm-ver-bits "${VERSION}")
RPM_VERSION=$(echo "${RPM_VER_BITS}" | cut -f1 -d' ')
RPM_RELEASE_VERSION=$(echo "${RPM_VER_BITS}" | cut -f2 -d' ')


# Check if we're on a tagged version, change VERSION to dev build if not
if ! git --git-dir "${GO_SRC_PATH}/.git" describe --exact-match HEAD >/dev/null 2>&1; then
    git_date=$(date --date "@$(git --git-dir "${GO_SRC_PATH}/.git" log -1 --pretty='%at')" +'%Y%m%d.%H%M%S')
    git_sha=$(git --git-dir "${GO_SRC_PATH}/.git" log -1 --pretty='%h')
    VERSION="0.${git_date}~${git_sha}"
    RPM_RELEASE_VERSION=0
    RPM_VERSION="$VERSION"
fi
REF=$(git --git-dir "${GO_SRC_PATH}/.git" rev-parse HEAD)

export REF
export RPM_RELEASE_VERSION
export RPM_VERSION
export VERSION

dep_install=""
if dnf builddep --version >/dev/null 2>/dev/null; then
    dep_install='dnf builddep'
elif yum-builddep --version >/dev/null 2>/dev/null; then
    dep_install='yum-builddep'
fi

pkg_manager='yum -y'
if dnf --version >/dev/null 2>/dev/null; then
    pkg_manager='dnf -y'
elif zypper --version >/dev/null 2>/dev/null; then
    pkg_manager='zypper -n'
fi

if [ -n "${dep_install}" ]; then
    # Install dependencies on distributions that support this, zypper doesn't have this option
    (set -x; ${dep_install} -y "${SPEC_FILE}")
else
    # This is mainly only for SuSE since they don't have a clear way to install dependencies
    dependencies=$(rpmspec -P ${SPEC_FILE} | sed -e '/^BuildRequires:/!d' -e 's/^BuildRequires: //' | xargs)
    (set -x; $pkg_manager install ${dependencies})
fi

DEST_DIR=/out/$(. /etc/os-release; echo "${ID}/${VERSION_ID}")/$(uname -m)/
(
    set -x
    rpmbuild -ba "${SPEC_FILE}"
    mkdir -p "${DEST_DIR}"
    mv -v RPMS/*/*.rpm "${DEST_DIR}"
    mv -v SRPMS/*.rpm "${DEST_DIR}"
)
